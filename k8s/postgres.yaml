apiVersion: v1
kind: ConfigMap
metadata:
  name: query
  namespace: gic3 
data:
  queries.yaml  : |+
    files_uploaded:
      values:
        - "file_count"
      query: "SELECT COUNT(*) AS file_count FROM files_media;"
      master: true
    database_size:
      values:
        - "mediacms_size"
      query: "SELECT pg_database_size(pg_database.datname) as size_bytes FROM pg_database Where pg_database.datname='mediacms';"
      master: true
    max_video_likes:
      values:
        - "max_likes"
      query: "select MAX(likes) FROM files_media;"
      master: true
    max_video_dislikes:
      values:
        - "max_dislikes"
      query: "select MAX(dislikes) FROM files_media;"
      master: true
    max_video_views:
      values:
        - "max_views"
      query: "select MAX(views) FROM files_media;"
      master: true
    failed_videos_encoding:
      values:
        - "fail_encodes_count"
      query: "SELECT COUNT(*) FROM files_media WHERE encoding_status = 'fail';"
      master: true

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: gic3
  labels:
    app: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: registry.deti:5000/postgresgic3:latest
        imagePullPolicy: Always 
        env:
          - name: POSTGRES_HOST_AUTH_METHOD
            value: trust
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: prod-db-secret
                key: username 
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: prod-db-secret
                key: password 
          - name: POSTGRES_DB
            value: mediacms   
        volumeMounts:
          - mountPath: /data
            name: pg-data
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - name: psql
          containerPort: 5432

      - name: postgres-exporter
        image: quay.io/prometheuscommunity/postgres-exporter
        imagePullPolicy: Always
        env:
          - name: DATA_SOURCE_URI
            value: postgres-svc:5432/mediacms?sslmode=disable
          - name: DATA_SOURCE_PASS
            valueFrom:
              secretKeyRef:
                name: prod-db-secret
                key: password  
          - name: DATA_SOURCE_USER
            valueFrom:
              secretKeyRef:
                name: prod-db-secret
                key: username 
        ports:
        - name: exporter
          containerPort: 9187
        args:
          - "--extend.query-path=/queries/queries.yaml"
        volumeMounts:
        - name: query
          mountPath: "/queries/queries.yaml"
          subPath: "queries.yaml"
      volumes:
        - name: query
          configMap:
            name: query
        - name: pg-data
          persistentVolumeClaim:
            claimName: pg-data-pvc

    


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pg-data-pvc
  namespace: gic3
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 10Mi

---


apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
  namespace: gic3
  labels:
    app: postgres
spec:
  ports:
      - name: psql
        port: 5432
        targetPort: 5432
      - name: exporter
        port: 9187
        targetPort: 9187
  selector:
      app: postgres
